= ユーザーインターフェイス基礎

実際にアプリを作っていく上で必要な画面のレイアウトやデザイン。これらを、「ユーザーが操作していくもの」という意味も含めて、ユーザーインターフェイスと呼びます。
たとえば、テキストを入力するものや、押すと何かが起こるボタンなどです。また、操作するわけではないですが、アプリの重要な要素として、テキストや画像などもそのうちのひとつです。

Androidアプリのユーザーインターフェイスは、プロジェクトの「res」フォルダ内のXMLファイルに記述していきます。

慣れてきたら自分でXMLを作成していくのですが、Androidにどんなパーツがあるのかがまだわからないうちは、いきなりXMLを書いていくのは少しむずかしいでしょう。
最初は、ドラッグアンドドロップで簡単にインターフェイスを作ることができる「Graphical Layout」を使って、Androidにはどのようなパーツがあるのかを見ていきます。
その後で、XMLを使ったレイアウトの作成方法をみていきましょう。

== Graphical Layoutを使ってレイアウトを作ってみよう

この節では、ADTについている「Graphical Layout」を使ってレイアウトを完成させます。
細かいことは気にせず、Androidにはどのようなパーツがあり、どんなときに使うのかをざっと把握することが目的です。

=== 新規プロジェクトを作成し、「Graphical Layout」を表示する

ADTを立ち上げ、新たにAndroidプロジェクトを作成します。
そうすると、「MainActivity.java」「fragment_main.xml」のふたつのファイルが開かれた状態になります。

上のタブで「fragment_main.xml」を選び、下のタブが「Graphical Layout」になっていることを確認します。


【001】（「fragment_main.xml」と「Graphical Layout」に矢印を入れたい）

=== Graphical Layout の見方を確認しよう

Graphical Layout を開くと、Androidの画面が大きくあらわれます。初期状態では、「Hello world!」というテキストがひとつ書かれているのがわかります。
他にもいくつかのパネルがあります。

＜001にA〜Gとそのタイトルを入れる＞

(A)パレット：各パーツが入っている
(B)プレビュー：現在設定されているものがプレビューされます
(C)プレビューに関する端末の設定：プレビューを表示する端末の種類やバージョンを設定します
(D)パーツのレイアウトに関する設定：パーツのレイアウト設定をします
(E)プレビューに関するビューの設定：プレビューを表示する大きさを設定します
(F)アウトライン：配置したパーツがどういう階層構造になっているのかを設定します
(G)プロパティ：配置したパーツの詳細設定をしていきます

最初からすべてを把握するのは大変です。必要なものはそのときどきで説明していきますので、まずはパーツを配置してみることからはじめていきましょう。



=== パーツを配置してみよう

(A)のパレットから好きなパーツを選んで、(B)のプレビュー領域にドラッグアンドドロップをしてみましょう。

　　 
【002（ドラッグ中） - 003（ドラッグ完了）】
▲(A)パレットの「Form Widgets」の中から「Button」を選んでドラッグアンドドロップし、Buttonを配置した

ボタンが配置されました。

=== プロパティパネルを使ってカスタマイズする

先ほど配置したボタンは、「Button」と書かれています。
このままではいったい何のボタンかわかりませんので、文字を変更します。

プレビュー画面のボタンを選択した状態で、プロパティパネルを見ると、ボタンのプロパティがたくさん出ています。


【004】
▲ボタンのプロパティ

この中にある「Text」という項目が、ボタンのラベルになっていますので、右の列の「Button」と書かれてあるところをダブルクリックし、「送信」に変えてみましょう。
（Textは2ヶ所ありますが、どちらも同じです）

【005】
▲ボタンのラベルを「送信」に変えた

そうすると、プレビューエリアのボタンのラベルも変わりました。


【006】
▲プレビューエリアのボタンのラベルも「送信」に変わった

このように、プロパティパネルにある値をいろいろと変えていくことで、パーツのカスタマイズができます。

=== パーツ一覧

パーツは、パレットエリアに、カテゴリごとにフォルダ分けされています。他のフォルダの中も見てみましょう。


【007 - 015】

パレットの中に入っているパーツは、配置するだけで、アプリ内でそのまま使えるものもあります。たとえば、テキストや画像などは何かを表示するだけのものですので、配置するだけでその役目を果たします。
しかし多くの場合はそうではなく、たとえば、テキストを入力してボタンを押したらどうなるか、というところをプログラミングしなければ、アプリとして成立しません。
それらは、配置するだけなら「レイアウトデザイン」として見せかけだけの画面はできあがりますが、アプリとして何か使えるようになるわけではないのです。

また、プログラミングによって関連付けをしなければ、たとえレイアウトデザインとしてであっても使えないパーツもたくさんあります。
「Composite」フォルダの中などはそういったものばかりです。

ここでは、ボタンを押しても何も起こらないような、見せかけだけのレイアウトを作っていくことを頭に置いておきましょう。

=== 実習1：Graphical Layoutを使って、次のインターフェイスを作成してみよう


【016】

==== 解説

基本的には、あてはまるパーツをパレットからドラッグアンドドロップして配置することで、完成します。
ただし、いくつかの注意点があります。

===== 1. Text Fieldsの種類

このサンプルには、

 * お名前
 * Email
 * お電話番号
 * パスワード

の4つのテキストフィールドがあり、それぞれ「Text Fields」フォルダの中から選んで配置しますが、それぞれの「Input Type」が異なるものを選んでくるのが最適です。

【017 - 020】
▲それぞれの特徴にあったText Fieldsを選ぶ

【021】
▲Input Typeの値が、E-mailでは「textEmailAddress」になっている

こうすることで、Android OSが最適なIME（日本語入力）キーボードを自動で表示することができます。
たとえば、「Plain Text」のときは通常の日本語入力キーボードですが、「E-mail」にしたときは英数字キーボードで、しかも「@」も表示されているのがわかります。
また、電話番号は「Phone」にすれば数字キーボードになります。パスワードも、「Password」にすると、入力済みの文字が「●」で表示され、見えなくなるようになっています。

すべて同じ「Plain Text」にしても間違いではないのですが、もし自分が入力する立場になったときのことを考えると、メールアドレスを入力したいときに、日本語キーボードが表示されていたら、英数字キーボードに切り替えるのは手間ですよね。
Input Typeで表示させるキーボードを切り分けることによって、@<b>[よりユーザーが使いやすいインターフェイスを表現できる]のです。

===== 2. ラジオグループ

ラジオボタンは、ひとまとまりのグループにおいて、ひとつの項目しか選択できない状態でなければなりません。

そうするためには、「Form Widgets」の中の「RadioGroup」を選ぶべきです。「RadioButton」を選んでしまうと、それぞれが単独で選べることになってしまいますので、注意しましょう。

【022】
▲ラジオボタンが単独で選ぶことができる状態。こうならないようにしよう

===== 3. 「登録する」というボタン

普通にボタンを置いた状態では、ボタンの横幅が文字数に応じたものになってしまいます。



【023】
▲ボタンの横幅が、「登録する」の4文字分しかない

これでは、小さくて押しづらくなってしまいます。
このボタンは、すべての項目を入力したあとの「入力完了」という意味も含めて押すものですので、横幅いっぱいに大きく配置しましょう。

まずはボタンを配置し、「登録する」というラベルに変更したあとに、マウスをうまく使って横幅いっぱいに伸ばします。


【024】
▲ボタンの横幅を調整する

ここまで完成したら、次の節ではXMLでインターフェイスを作っていきましょう。